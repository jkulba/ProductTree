---
import { getCollection } from 'astro:content';
import DocsLayout from '../layouts/DocsLayout.astro';

export async function getStaticPaths() {
  const docs = await getCollection('docs');
  return docs.map((doc) => {
    return {
      params: { slug: doc.slug },
      props: { doc },
    };
  });
}

const { doc } = Astro.props;
const { Content } = await doc.render();

// Extract app name and category from slug
const [app, category] = doc.slug.split('/');
const appName = app
  .split('-')
  .map(word => word.charAt(0).toUpperCase() + word.slice(1))
  .join(' ');

const categoryName = category
  .split('-')
  .map(word => word.charAt(0).toUpperCase() + word.slice(1))
  .join(' ');

const pageTitle = `${doc.data.title} | ${appName}`;
const breadcrumb = [
  { name: 'Home', href: '/' },
  { name: appName, href: `/${app}` },
  { name: categoryName, href: `/${doc.slug}` }
];
---

<DocsLayout title={pageTitle} description={doc.data.description}>
  <!-- Breadcrumb Navigation -->
  <nav class="flex mb-8" aria-label="Breadcrumb">
    <ol class="inline-flex items-center space-x-1 md:space-x-3">
      {breadcrumb.map((item, index) => (
        <li class="inline-flex items-center">
          {index > 0 && (
            <svg class="w-6 h-6 text-gray-400 mx-1" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
            </svg>
          )}
          {index === breadcrumb.length - 1 ? (
            <span class="text-gray-500 text-sm font-medium">{item.name}</span>
          ) : (
            <a href={item.href} class="text-gray-700 hover:text-primary-600 text-sm font-medium transition-colors">
              {item.name}
            </a>
          )}
        </li>
      ))}
    </ol>
  </nav>

  <!-- Document Header -->
  <header class="mb-10">
    <div class="flex items-center space-x-3 mb-4">
      <div class="flex items-center space-x-2">
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary-100 text-primary-800">
          {appName}
        </span>
        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
          {categoryName}
        </span>
      </div>
      {doc.data.tags && (
        <div class="flex flex-wrap gap-1">
          {doc.data.tags.map(tag => (
            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800">
              {tag}
            </span>
          ))}
        </div>
      )}
    </div>
    
    <h1 class="text-4xl font-bold text-gray-900 mb-4">{doc.data.title}</h1>
    
    {doc.data.description && (
      <p class="text-xl text-gray-600 mb-6">{doc.data.description}</p>
    )}

    {doc.data.lastUpdated && (
      <div class="flex items-center text-sm text-gray-500">
        <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        Last updated: {new Date(doc.data.lastUpdated).toLocaleDateString('en-US', { 
          year: 'numeric', 
          month: 'long', 
          day: 'numeric' 
        })}
      </div>
    )}
  </header>

  <!-- Document Content -->
  <div class="prose-content">
    <Content />
  </div>

  <!-- Document Footer -->
  <footer class="mt-16 pt-8 border-t border-gray-200">
    <div class="flex flex-col sm:flex-row sm:justify-between sm:items-center">
      <div class="flex items-center text-sm text-gray-500 mb-4 sm:mb-0">
        <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
        </svg>
        Found an issue? 
        <a href={`https://github.com/jkulba/ProductTree/edit/main/src/content/docs/${doc.slug}.md`} 
           target="_blank" 
           class="ml-1 text-primary-600 hover:text-primary-700 font-medium">
          Edit this page
        </a>
      </div>
      
      <div class="flex items-center space-x-4">
        <a 
          href="mailto:support@hallcrest.engineering?subject=Documentation Feedback"
          class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
        >
          <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
          </svg>
          Send Feedback
        </a>
        
        <button 
          id="share-button"
          class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
        >
          <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
          </svg>
          Share
        </button>
      </div>
    </div>
  </footer>

  <!-- Table of Contents (if the content has headings) -->
  <aside class="hidden xl:block xl:fixed xl:top-20 xl:right-8 xl:w-64">
    <div class="sticky top-8">
      <div class="bg-white border border-gray-200 rounded-lg p-4">
        <h3 class="font-semibold text-gray-900 mb-3">On this page</h3>
        <nav id="toc" class="space-y-1">
          <!-- TOC will be populated by JavaScript -->
        </nav>
      </div>
    </div>
  </aside>
</DocsLayout>

<script>
  // Generate Table of Contents
  document.addEventListener('DOMContentLoaded', function() {
    const tocContainer = document.getElementById('toc');
    const headings = document.querySelectorAll('.prose-content h1, .prose-content h2, .prose-content h3, .prose-content h4');
    
    if (headings.length > 0 && tocContainer) {
      const tocList = document.createElement('ul');
      tocList.className = 'space-y-1';
      
      headings.forEach((heading, index) => {
        // Add ID to heading if it doesn't have one
        if (!heading.id) {
          heading.id = `heading-${index}`;
        }
        
        const level = parseInt(heading.tagName.charAt(1));
        const listItem = document.createElement('li');
        listItem.className = level > 2 ? 'ml-4' : '';
        
        const link = document.createElement('a');
        link.href = `#${heading.id}`;
        link.textContent = heading.textContent;
        link.className = `block text-sm text-gray-600 hover:text-primary-600 py-1 transition-colors ${level === 1 ? 'font-medium' : ''}`;
        
        listItem.appendChild(link);
        tocList.appendChild(listItem);
      });
      
      tocContainer.appendChild(tocList);
      
      // Smooth scrolling for TOC links
      tocContainer.querySelectorAll('a').forEach(link => {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          const href = this.getAttribute('href');
          if (href) {
            const target = document.querySelector(href);
            if (target) {
              target.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
          }
        });
      });
    } else if (tocContainer) {
      tocContainer.parentElement?.style.setProperty('display', 'none');
    }
    
    // Share functionality
    const shareButton = document.getElementById('share-button');
    shareButton?.addEventListener('click', async function() {
      const title = document.title;
      const url = window.location.href;
      
      if (navigator.share) {
        try {
          await navigator.share({ title, url });
        } catch (err) {
          console.log('Share canceled');
        }
      } else {
        // Fallback: copy to clipboard
        try {
          await navigator.clipboard.writeText(url);
          
          // Show feedback
          const originalText = this.innerHTML;
          this.innerHTML = `
            <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
            Copied!
          `;
          
          setTimeout(() => {
            this.innerHTML = originalText;
          }, 2000);
        } catch (err) {
          console.error('Failed to copy to clipboard:', err);
        }
      }
    });
    
    // Highlight current section in TOC
    const observerOptions = {
      rootMargin: '-20% 0% -35% 0%',
      threshold: 0
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        const id = entry.target.id;
        const tocLink = tocContainer?.querySelector(`a[href="#${id}"]`);
        
        if (entry.isIntersecting) {
          // Remove active class from all links
          tocContainer?.querySelectorAll('a').forEach(link => {
            link.classList.remove('text-primary-600', 'font-medium');
            link.classList.add('text-gray-600');
          });
          
          // Add active class to current link
          if (tocLink) {
            tocLink.classList.remove('text-gray-600');
            tocLink.classList.add('text-primary-600', 'font-medium');
          }
        }
      });
    }, observerOptions);
    
    headings.forEach(heading => observer.observe(heading));
  });
</script>

<style>
  /* Enhanced prose styling */
  .prose-content {
    @apply max-w-none;
  }

  .prose-content h1,
  .prose-content h2,
  .prose-content h3,
  .prose-content h4,
  .prose-content h5,
  .prose-content h6 {
    @apply font-semibold text-gray-900 mt-8 mb-4;
    scroll-margin-top: 2rem;
  }

  .prose-content h1 { @apply text-3xl; }
  .prose-content h2 { @apply text-2xl; }
  .prose-content h3 { @apply text-xl; }
  .prose-content h4 { @apply text-lg; }
  .prose-content h5 { @apply text-base; }
  .prose-content h6 { @apply text-sm; }

  .prose-content p {
    @apply mb-4 leading-7 text-gray-700;
  }

  .prose-content ul,
  .prose-content ol {
    @apply mb-4 ml-6;
  }

  .prose-content li {
    @apply mb-2;
  }

  .prose-content ul li {
    @apply list-disc;
  }

  .prose-content ol li {
    @apply list-decimal;
  }

  .prose-content a {
    @apply text-primary-600 hover:text-primary-700 font-medium underline;
  }

  .prose-content blockquote {
    @apply border-l-4 border-gray-300 pl-4 italic text-gray-600 my-4;
  }

  .prose-content code {
    @apply bg-gray-100 text-gray-800 px-1 py-0.5 rounded text-sm font-mono;
  }

  .prose-content pre {
    @apply bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto my-4;
  }

  .prose-content pre code {
    @apply bg-transparent text-inherit p-0;
  }

  .prose-content table {
    @apply w-full border-collapse border border-gray-300 my-4;
  }

  .prose-content th,
  .prose-content td {
    @apply border border-gray-300 px-4 py-2;
  }

  .prose-content th {
    @apply bg-gray-50 font-semibold text-left;
  }

  .prose-content img {
    @apply max-w-full h-auto rounded-lg shadow-sm my-4;
  }

  .prose-content hr {
    @apply border-gray-300 my-8;
  }

  /* Code syntax highlighting - basic styles */
  .prose-content .highlight {
    @apply bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto my-4;
  }

  /* Responsive adjustments */
  @media (max-width: 1280px) {
    .prose-content {
      @apply pr-0;
    }
  }
</style>